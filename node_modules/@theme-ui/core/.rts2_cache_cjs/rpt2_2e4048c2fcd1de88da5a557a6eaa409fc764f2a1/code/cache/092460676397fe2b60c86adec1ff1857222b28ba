{"code":"import { jsx as emotion, ThemeContext as EmotionContext, } from '@emotion/core';\r\n// @ts-ignore\r\nimport { css } from '@theme-ui/css';\r\nimport React from 'react';\r\nimport deepmerge from 'deepmerge';\r\nimport { version as __EMOTION_VERSION__ } from '@emotion/core/package.json';\r\nimport './react-jsx';\r\nconst getCSS = props => {\r\n    if (!props.sx && !props.css)\r\n        return undefined;\r\n    return theme => {\r\n        const styles = css(props.sx)(theme);\r\n        const raw = typeof props.css === 'function' ? props.css(theme) : props.css;\r\n        return [styles, raw];\r\n    };\r\n};\r\nconst parseProps = props => {\r\n    if (!props)\r\n        return null;\r\n    const next = {};\r\n    for (let key in props) {\r\n        if (key === 'sx')\r\n            continue;\r\n        next[key] = props[key];\r\n    }\r\n    const css = getCSS(props);\r\n    if (css)\r\n        next.css = css;\r\n    return next;\r\n};\r\nexport const jsx = (type, props, ...children) => emotion.apply(undefined, [type, parseProps(props), ...children]);\r\nexport const Context = React.createContext({\r\n    __EMOTION_VERSION__,\r\n    theme: null,\r\n});\r\nexport const useThemeUI = () => React.useContext(Context);\r\nconst canUseSymbol = typeof Symbol === 'function' && Symbol.for;\r\nconst REACT_ELEMENT = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\r\nconst FORWARD_REF = canUseSymbol ? Symbol.for('react.forward_ref') : 0xeac7;\r\nconst isMergeableObject = n => {\r\n    return (!!n &&\r\n        typeof n === 'object' &&\r\n        n.$$typeof !== REACT_ELEMENT &&\r\n        n.$$typeof !== FORWARD_REF);\r\n};\r\nconst arrayMerge = (destinationArray, sourceArray, options) => sourceArray;\r\nexport const merge = (a, b) => deepmerge(a, b, { isMergeableObject, arrayMerge });\r\nmerge.all = (...args) => deepmerge.all(args, { isMergeableObject, arrayMerge });\r\nconst BaseProvider = ({ context, children }) => jsx(EmotionContext.Provider, { value: context.theme }, jsx(Context.Provider, {\r\n    value: context,\r\n    children,\r\n}));\r\nexport function ThemeProvider({ theme, children }) {\r\n    const outer = useThemeUI();\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        if (outer.__EMOTION_VERSION__ !== __EMOTION_VERSION__) {\r\n            console.warn('Multiple versions of Emotion detected,', 'and theming might not work as expected.', 'Please ensure there is only one copy of @emotion/core installed in your application.');\r\n        }\r\n    }\r\n    const context = typeof theme === 'function'\r\n        ? { ...outer, theme: theme(outer.theme) }\r\n        : merge.all({}, outer, { theme });\r\n    return jsx(BaseProvider, { context }, children);\r\n}\r\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/jackson/theme-ui/packages/core/index.d.ts","writeByteOrderMark":false,"text":"import { Theme } from '@theme-ui/css';\r\nimport React from 'react';\r\nimport './react-jsx';\r\nexport * from './types';\r\nexport declare const jsx: typeof React.createElement;\r\nexport interface ContextValue {\r\n    __EMOTION_VERSION__: string;\r\n    theme: Theme | null;\r\n}\r\nexport declare const Context: React.Context<ContextValue>;\r\nexport declare const useThemeUI: () => ContextValue;\r\nexport declare const merge: {\r\n    <T>(a: Partial<T>, b: Partial<T>): T;\r\n    all<T_1>(...args: Partial<T_1>[]): T_1;\r\n};\r\ninterface BaseProviderProps {\r\n    context: ContextValue;\r\n}\r\nexport interface ThemeProviderProps {\r\n    theme: Partial<Theme> | ((outerTheme: Theme) => Theme);\r\n    children?: React.ReactNode;\r\n}\r\nexport declare function ThemeProvider({ theme, children }: ThemeProviderProps): React.FunctionComponentElement<BaseProviderProps>;\r\n"}}
