import { Theme } from '@theme-ui/css';
import React from 'react';
import './react-jsx';
export * from './types';
export declare const jsx: typeof React.createElement;
export interface ContextValue {
    __EMOTION_VERSION__: string;
    theme: Theme | null;
}
export declare const Context: React.Context<ContextValue>;
export declare const useThemeUI: () => ContextValue;
export declare const merge: {
    <T>(a: Partial<T>, b: Partial<T>): T;
    all<T_1>(...args: Partial<T_1>[]): T_1;
};
interface BaseProviderProps {
    context: ContextValue;
}
export interface ThemeProviderProps {
    theme: Partial<Theme> | ((outerTheme: Theme) => Theme);
    children?: React.ReactNode;
}
export declare function ThemeProvider({ theme, children }: ThemeProviderProps): React.FunctionComponentElement<BaseProviderProps>;
