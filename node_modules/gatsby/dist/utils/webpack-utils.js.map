{"version":3,"sources":["../../src/utils/webpack-utils.ts"],"names":["createWebpackUtils","stage","program","assetRelativeRoot","vendorRegex","supportedBrowsers","directory","PRODUCTION","includes","isSSR","makeExternalOnly","original","options","rule","include","makeInternalOnly","exclude","ident","loaders","json","loader","require","resolve","yaml","null","raw","style","miniCssExtract","MiniCssExtractPlugin","css","sourceMap","camelCase","localIdentName","postcss","plugins","overrideBrowserslist","postcssOpts","flexbugs","flexbox","file","name","url","limit","fallback","js","dependencies","eslint","schema","imports","exports","rules","modulesThatUseGatsby","test","modulePath","some","module","path","type","use","configFile","compact","jsOptions","babelrc","presets","sourceMaps","cacheIdentifier","version","enforce","fonts","images","media","miscAssets","browsers","restOptions","importLoaders","unshift","hmr","modules","internal","external","cssModules","builtinPlugins","minifyJs","terserOptions","TerserPlugin","cache","parallel","isWsl","ie8","mangle","safari10","parse","ecma","compress","output","minifyCss","cssProcessorPluginOptions","preset","svgo","full","removeUselessDefs","addAttributesToSVGElement","addClassesToSVGElement","cleanupAttrs","cleanupEnableBackground","cleanupIDs","cleanupListOfValues","cleanupNumericValues","collapseGroups","convertColors","convertPathData","convertStyleToAttrs","convertTransform","inlineStyles","mergePaths","minifyStyles","moveElemsAttrsToGroup","moveGroupAttrsToElems","prefixIds","removeAttributesBySelector","removeAttrs","removeComments","removeDesc","removeDimensions","removeDoctype","removeEditorsNSData","removeElementsByAttr","removeEmptyAttrs","removeEmptyContainers","removeEmptyText","removeHiddenElems","removeMetadata","removeNonInheritableGroupAttrs","removeOffCanvasPaths","removeRasterImages","removeScriptElement","removeStyleElement","removeTitle","removeUnknownsAndDefaults","removeUnusedNS","removeUselessStrokeAndFill","removeXMLNS","removeXMLProcInst","reusePaths","sortAttrs","OptimizeCssAssetsPlugin","fastRefresh","ReactRefreshWebpackPlugin","overlay","sockIntegration","extractText","filename","chunkFilename","moment","ignore","extractStats","GatsbyWebpackStatsExtractor","eslintGraphqlSchemaReload","GatsbyWebpackEslintGraphqlSchemaReload"],"mappings":"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","sourcesContent":["import { Loader, RuleSetRule, Plugin } from \"webpack\"\nimport { GraphQLSchema } from \"graphql\"\nimport autoprefixer from \"autoprefixer\"\nimport flexbugs from \"postcss-flexbugs-fixes\"\nimport TerserPlugin from \"terser-webpack-plugin\"\nimport MiniCssExtractPlugin from \"mini-css-extract-plugin\"\nimport OptimizeCssAssetsPlugin from \"optimize-css-assets-webpack-plugin\"\nimport ReactRefreshWebpackPlugin from \"@pmmmwh/react-refresh-webpack-plugin\"\nimport isWsl from \"is-wsl\"\nimport { getBrowsersList } from \"./browserslist\"\n\nimport { GatsbyWebpackStatsExtractor } from \"./gatsby-webpack-stats-extractor\"\nimport { GatsbyWebpackEslintGraphqlSchemaReload } from \"./gatsby-webpack-eslint-graphql-schema-reload-plugin\"\n\nimport { builtinPlugins } from \"./webpack-plugins\"\nimport { IProgram, Stage } from \"../commands/types\"\nimport { eslintConfig } from \"./eslint-config\"\n\ntype LoaderResolver<T = {}> = (options?: T) => Loader\n\ntype LoaderOptions = Record<string, any>\ntype RuleFactory<T = {}> = (options?: T & LoaderOptions) => RuleSetRule\n\ntype ContextualRuleFactory<T = {}> = RuleFactory<T> & {\n  internal?: RuleFactory<T>\n  external?: RuleFactory<T>\n}\n\ntype PluginFactory = (...args: any) => Plugin\n\ntype BuiltinPlugins = typeof builtinPlugins\n\n/**\n * Utils that produce webpack `loader` objects\n */\ninterface ILoaderUtils {\n  json: LoaderResolver\n  yaml: LoaderResolver\n  null: LoaderResolver\n  raw: LoaderResolver\n\n  style: LoaderResolver\n  css: LoaderResolver\n  postcss: LoaderResolver<{\n    browsers?: string[]\n    overrideBrowserslist?: string[]\n    plugins?: Plugin[] | ((loader: Loader) => Plugin[])\n  }>\n\n  file: LoaderResolver\n  url: LoaderResolver\n  js: LoaderResolver\n  dependencies: LoaderResolver\n\n  miniCssExtract: LoaderResolver\n  imports: LoaderResolver\n  exports: LoaderResolver\n\n  eslint(schema: GraphQLSchema): Loader\n}\n\ninterface IModuleThatUseGatsby {\n  name: string\n  path: string\n}\n\ntype CssLoaderModuleOption = boolean | Record<string, any> | string\n\n/**\n * Utils that produce webpack rule objects\n */\ninterface IRuleUtils {\n  /**\n   * Handles JavaScript compilation via babel\n   */\n  js: RuleFactory<{ modulesThatUseGatsby?: IModuleThatUseGatsby[] }>\n  dependencies: RuleFactory<{ modulesThatUseGatsby?: IModuleThatUseGatsby[] }>\n  yaml: RuleFactory\n  fonts: RuleFactory\n  images: RuleFactory\n  miscAssets: RuleFactory\n  media: RuleFactory\n\n  css: ContextualRuleFactory<{\n    browsers?: string[]\n    modules?: CssLoaderModuleOption\n  }>\n  cssModules: RuleFactory\n  postcss: ContextualRuleFactory<{ overrideBrowserOptions: string[] }>\n\n  eslint: (schema: GraphQLSchema) => RuleSetRule\n}\n\ntype PluginUtils = BuiltinPlugins & {\n  extractText: PluginFactory\n  uglify: PluginFactory\n  moment: PluginFactory\n  extractStats: PluginFactory\n  minifyJs: PluginFactory\n  minifyCss: PluginFactory\n  fastRefresh: PluginFactory\n  eslintGraphqlSchemaReload: PluginFactory\n}\n\n/**\n * webpack atoms namespace\n */\ninterface IWebpackUtils {\n  loaders: ILoaderUtils\n\n  rules: IRuleUtils\n\n  plugins: PluginUtils\n}\n\n/**\n * A factory method that produces an atoms namespace\n */\nexport const createWebpackUtils = (\n  stage: Stage,\n  program: IProgram\n): IWebpackUtils => {\n  const assetRelativeRoot = `static/`\n  const vendorRegex = /(node_modules|bower_components)/\n  const supportedBrowsers = getBrowsersList(program.directory)\n\n  const PRODUCTION = !stage.includes(`develop`)\n\n  const isSSR = stage.includes(`html`)\n\n  const makeExternalOnly = (original: RuleFactory) => (\n    options = {}\n  ): RuleSetRule => {\n    const rule = original(options)\n    rule.include = vendorRegex\n    return rule\n  }\n\n  const makeInternalOnly = (original: RuleFactory) => (\n    options = {}\n  ): RuleSetRule => {\n    const rule = original(options)\n    rule.exclude = vendorRegex\n    return rule\n  }\n\n  let ident = 0\n\n  const loaders: ILoaderUtils = {\n    json: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`json-loader`),\n      }\n    },\n\n    yaml: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`yaml-loader`),\n      }\n    },\n\n    null: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`null-loader`),\n      }\n    },\n\n    raw: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`raw-loader`),\n      }\n    },\n\n    style: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`style-loader`),\n      }\n    },\n\n    miniCssExtract: (options = {}) => {\n      return {\n        options,\n        // use MiniCssExtractPlugin only on production builds\n        loader: PRODUCTION\n          ? MiniCssExtractPlugin.loader\n          : require.resolve(`style-loader`),\n      }\n    },\n\n    css: (options = {}) => {\n      return {\n        loader: isSSR\n          ? require.resolve(`css-loader/locals`)\n          : require.resolve(`css-loader`),\n        options: {\n          sourceMap: !PRODUCTION,\n          camelCase: `dashesOnly`,\n          // https://github.com/webpack-contrib/css-loader/issues/406\n          localIdentName: `[name]--[local]--[hash:base64:5]`,\n          ...options,\n        },\n      }\n    },\n\n    postcss: (options = {}) => {\n      let {\n        plugins,\n        overrideBrowserslist = supportedBrowsers,\n        ...postcssOpts\n      } = options\n\n      return {\n        loader: require.resolve(`postcss-loader`),\n        options: {\n          ident: `postcss-${++ident}`,\n          sourceMap: !PRODUCTION,\n          plugins: (loader: Loader): Plugin[] => {\n            plugins =\n              (typeof plugins === `function` ? plugins(loader) : plugins) || []\n\n            return [\n              flexbugs,\n              autoprefixer({ overrideBrowserslist, flexbox: `no-2009` }),\n              ...plugins,\n            ]\n          },\n          ...postcssOpts,\n        },\n      }\n    },\n\n    file: (options = {}) => {\n      return {\n        loader: require.resolve(`file-loader`),\n        options: {\n          name: `${assetRelativeRoot}[name]-[hash].[ext]`,\n          ...options,\n        },\n      }\n    },\n\n    url: (options = {}) => {\n      return {\n        loader: require.resolve(`url-loader`),\n        options: {\n          limit: 10000,\n          name: `${assetRelativeRoot}[name]-[hash].[ext]`,\n          fallback: require.resolve(`file-loader`),\n          ...options,\n        },\n      }\n    },\n\n    js: options => {\n      return {\n        options: {\n          stage,\n          ...options,\n        },\n        loader: require.resolve(`./babel-loader`),\n      }\n    },\n\n    dependencies: options => {\n      return {\n        options,\n        loader: require.resolve(`babel-loader`),\n      }\n    },\n\n    eslint: (schema: GraphQLSchema) => {\n      const options = eslintConfig(schema)\n\n      return {\n        options,\n        loader: require.resolve(`eslint-loader`),\n      }\n    },\n\n    imports: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`imports-loader`),\n      }\n    },\n\n    exports: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`exports-loader`),\n      }\n    },\n  }\n\n  /**\n   * Rules\n   */\n  const rules = {} as IRuleUtils\n\n  /**\n   * JavaScript loader via babel, includes userland code\n   * and packages that depend on `gatsby`\n   */\n  {\n    const js = ({\n      modulesThatUseGatsby = [],\n      ...options\n    }: { modulesThatUseGatsby?: IModuleThatUseGatsby[] } = {}): RuleSetRule => {\n      return {\n        test: /\\.(js|mjs|jsx)$/,\n        include: (modulePath: string): boolean => {\n          // when it's not coming from node_modules we treat it as a source file.\n          if (!vendorRegex.test(modulePath)) {\n            return true\n          }\n\n          // If the module uses Gatsby as a dependency\n          // we want to treat it as src so we can extract queries\n          return modulesThatUseGatsby.some(module =>\n            modulePath.includes(module.path)\n          )\n        },\n        type: `javascript/auto`,\n        use: [\n          loaders.js({\n            ...options,\n            configFile: true,\n            compact: PRODUCTION,\n          }),\n        ],\n      }\n    }\n    rules.js = js\n  }\n\n  /**\n   * Node_modules JavaScript loader via babel\n   * Excludes core-js & babel-runtime to speedup babel transpilation\n   * Excludes modules that use Gatsby since the `rules.js` already transpiles those\n   */\n  {\n    const dependencies = ({\n      modulesThatUseGatsby = [],\n    }: {\n      modulesThatUseGatsby?: IModuleThatUseGatsby[]\n    } = {}): RuleSetRule => {\n      const jsOptions = {\n        babelrc: false,\n        configFile: false,\n        compact: false,\n        presets: [\n          [\n            require.resolve(`babel-preset-gatsby/dependencies`),\n            {\n              stage,\n            },\n          ],\n        ],\n        // If an error happens in a package, it's possible to be\n        // because it was compiled. Thus, we don't want the browser\n        // debugger to show the original code. Instead, the code\n        // being evaluated would be much more helpful.\n        sourceMaps: false,\n        cacheIdentifier: `${stage}---gatsby-dependencies@${\n          require(`babel-preset-gatsby/package.json`).version\n        }`,\n      }\n\n      return {\n        test: /\\.(js|mjs)$/,\n        exclude: (modulePath: string): boolean => {\n          if (vendorRegex.test(modulePath)) {\n            // If dep uses Gatsby, exclude\n            if (\n              modulesThatUseGatsby.some(module =>\n                modulePath.includes(module.path)\n              )\n            ) {\n              return true\n            }\n            // If dep is known library that doesn't need polyfilling, we don't.\n            // TODO this needs rework, this is buggy as hell\n            if (\n              /node_modules[\\\\/](@babel[\\\\/]runtime|core-js|react|react-dom|scheduler|prop-types)[\\\\/]/.test(\n                modulePath\n              )\n            ) {\n              return true\n            }\n\n            // If dep is in node_modules and none of the above, include\n            return false\n          }\n\n          // If dep is user land code, exclude\n          return true\n        },\n        type: `javascript/auto`,\n        use: [loaders.dependencies(jsOptions)],\n      }\n    }\n    rules.dependencies = dependencies\n  }\n\n  rules.eslint = (schema: GraphQLSchema): RuleSetRule => {\n    return {\n      enforce: `pre`,\n      test: /\\.jsx?$/,\n      exclude: vendorRegex,\n      use: [loaders.eslint(schema)],\n    }\n  }\n\n  rules.yaml = (): RuleSetRule => {\n    return {\n      test: /\\.ya?ml/,\n      use: [loaders.json(), loaders.yaml()],\n    }\n  }\n\n  /**\n   * Font loader\n   */\n  rules.fonts = (): RuleSetRule => {\n    return {\n      use: [loaders.url()],\n      test: /\\.(eot|otf|ttf|woff(2)?)(\\?.*)?$/,\n    }\n  }\n\n  /**\n   * Loads image assets, inlines images via a data URI if they are below\n   * the size threshold\n   */\n  rules.images = (): RuleSetRule => {\n    return {\n      use: [loaders.url()],\n      test: /\\.(ico|svg|jpg|jpeg|png|gif|webp)(\\?.*)?$/,\n    }\n  }\n\n  /**\n   * Loads audio and video and inlines them via a data URI if they are below\n   * the size threshold\n   */\n  rules.media = (): RuleSetRule => {\n    return {\n      use: [loaders.url()],\n      test: /\\.(mp4|webm|ogv|wav|mp3|m4a|aac|oga|flac)$/,\n    }\n  }\n\n  /**\n   * Loads assets without inlining\n   */\n  rules.miscAssets = (): RuleSetRule => {\n    return {\n      use: [loaders.file()],\n      test: /\\.pdf$/,\n    }\n  }\n\n  /**\n   * CSS style loader.\n   */\n  {\n    const css: IRuleUtils[\"css\"] = (options = {}): RuleSetRule => {\n      const { browsers, ...restOptions } = options\n      const use = [\n        loaders.css({ ...restOptions, importLoaders: 1 }),\n        loaders.postcss({ browsers }),\n      ]\n      if (!isSSR)\n        use.unshift(\n          loaders.miniCssExtract({ hmr: !PRODUCTION && !restOptions.modules })\n        )\n\n      return {\n        use,\n        test: /\\.css$/,\n      }\n    }\n\n    /**\n     * CSS style loader, _excludes_ node_modules.\n     */\n    css.internal = makeInternalOnly(css)\n    css.external = makeExternalOnly(css)\n\n    const cssModules: IRuleUtils[\"cssModules\"] = (options): RuleSetRule => {\n      const rule = css({ ...options, modules: true })\n      delete rule.exclude\n      rule.test = /\\.module\\.css$/\n      return rule\n    }\n\n    rules.css = css\n    rules.cssModules = cssModules\n  }\n\n  /**\n   * PostCSS loader.\n   */\n  {\n    const postcss: ContextualRuleFactory = (options): RuleSetRule => {\n      return {\n        test: /\\.css$/,\n        use: [loaders.css({ importLoaders: 1 }), loaders.postcss(options)],\n      }\n    }\n\n    /**\n     * PostCSS loader, _excludes_ node_modules.\n     */\n    postcss.internal = makeInternalOnly(postcss)\n    postcss.external = makeExternalOnly(postcss)\n    rules.postcss = postcss\n  }\n  /**\n   * cast rules to IRuleUtils\n   */\n  /**\n   * Plugins\n   */\n  const plugins = { ...builtinPlugins } as PluginUtils\n\n  plugins.minifyJs = ({\n    terserOptions,\n    ...options\n  }: { terserOptions?: TerserPlugin.TerserPluginOptions } = {}): Plugin =>\n    new TerserPlugin({\n      cache: true,\n      // We can't use parallel in WSL because of https://github.com/gatsbyjs/gatsby/issues/6540\n      // This issue was fixed in https://github.com/gatsbyjs/gatsby/pull/12636\n      parallel: !isWsl,\n      exclude: /\\.min\\.js/,\n      sourceMap: true,\n      terserOptions: {\n        ie8: false,\n        mangle: {\n          safari10: true,\n        },\n        parse: {\n          ecma: 8,\n        },\n        compress: {\n          ecma: 5,\n        },\n        output: {\n          ecma: 5,\n        },\n        ...terserOptions,\n      },\n      ...options,\n    })\n\n  plugins.minifyCss = (\n    options = {\n      cssProcessorPluginOptions: {\n        preset: [\n          `default`,\n          {\n            svgo: {\n              full: true,\n              plugins: [\n                {\n                  // potentially destructive plugins removed - see https://github.com/gatsbyjs/gatsby/issues/15629\n                  // convertShapeToPath: true,\n                  // removeViewBox: true,\n                  removeUselessDefs: true,\n                  addAttributesToSVGElement: true,\n                  addClassesToSVGElement: true,\n                  cleanupAttrs: true,\n                  cleanupEnableBackground: true,\n                  cleanupIDs: true,\n                  cleanupListOfValues: true,\n                  cleanupNumericValues: true,\n                  collapseGroups: true,\n                  convertColors: true,\n                  convertPathData: true,\n                  convertStyleToAttrs: true,\n                  convertTransform: true,\n                  inlineStyles: true,\n                  mergePaths: true,\n                  minifyStyles: true,\n                  moveElemsAttrsToGroup: true,\n                  moveGroupAttrsToElems: true,\n                  prefixIds: true,\n                  removeAttributesBySelector: true,\n                  removeAttrs: true,\n                  removeComments: true,\n                  removeDesc: true,\n                  removeDimensions: true,\n                  removeDoctype: true,\n                  removeEditorsNSData: true,\n                  removeElementsByAttr: true,\n                  removeEmptyAttrs: true,\n                  removeEmptyContainers: true,\n                  removeEmptyText: true,\n                  removeHiddenElems: true,\n                  removeMetadata: true,\n                  removeNonInheritableGroupAttrs: true,\n                  removeOffCanvasPaths: true,\n                  removeRasterImages: true,\n                  removeScriptElement: true,\n                  removeStyleElement: true,\n                  removeTitle: true,\n                  removeUnknownsAndDefaults: true,\n                  removeUnusedNS: true,\n                  removeUselessStrokeAndFill: true,\n                  removeXMLNS: true,\n                  removeXMLProcInst: true,\n                  reusePaths: true,\n                  sortAttrs: true,\n                },\n              ],\n            },\n          },\n        ],\n      },\n    }\n  ): OptimizeCssAssetsPlugin => new OptimizeCssAssetsPlugin(options)\n\n  plugins.fastRefresh = (): Plugin =>\n    new ReactRefreshWebpackPlugin({\n      overlay: {\n        sockIntegration: `whm`,\n      },\n    })\n\n  plugins.extractText = (options: any): Plugin =>\n    new MiniCssExtractPlugin({\n      filename: `[name].[contenthash].css`,\n      chunkFilename: `[name].[contenthash].css`,\n      ...options,\n    })\n\n  plugins.moment = (): Plugin => plugins.ignore(/^\\.\\/locale$/, /moment$/)\n\n  plugins.extractStats = (): GatsbyWebpackStatsExtractor =>\n    new GatsbyWebpackStatsExtractor()\n\n  plugins.eslintGraphqlSchemaReload = (): GatsbyWebpackEslintGraphqlSchemaReload =>\n    new GatsbyWebpackEslintGraphqlSchemaReload()\n\n  return {\n    loaders,\n    rules,\n    plugins,\n  }\n}\n"],"file":"webpack-utils.js"}